[
    {
    "title": "US Domestic Gross Box Office - Deneb Remake #1",
    "date": "2025-04-16",
    "content": "<h2>Summary</h2><p>I recreated a visual showing the effects of Covid-19 on US cinema-goers using Vega-Lite in a Deneb custom visual in Power BI.</p><h2>Inspiration & Background</h2><p>Inspired by a chart in <a href='https://www.trendlineHQ.com'>www.trendlineHQ.com</a>, I recreated the following visual using Vega-Lite inside a Deneb custom visual in Power BI. The underlying data combines annual US Box Office receipts from 1977 onwards, sourced from Box Office Mojo.</p><figure><img src='/images/USDomesticBoxOffice_Original.png' alt='Original Visualisation' style='max-width:100%; height=auto;'><figcaption>Original Visualisation â€“ Source: TrendlineHQ (data from BoxOfficeMojo.com)</figcaption></figure><br><p>This was an interesting visual to me and showed simply the stark effect of COVID-19 on cinema-goers in the US. I also thought it was a nice simple remake to start with.</p><p>I felt the little caption / narrative emphasising the change from 2019 would be the tricky part and I wanted to investigate whether this was possible in Deneb.</p><h2>Methodology</h2><h3>Design Notes</h3><p>A measure was created in Power BI to sum up the total Box Office Gross value.</p><p>A bar mark was then used within Vega-Lite to create the column chart. This was encoded with the measure for the y-axis and the year for the x-axis.</p><p>A parameter was used in the config to hold the hex colour for the columns. This choice was made to aid flexibility: If I want to switch colours in future, this only needs changing in the configuration, I don't need to go through the specification. This was then referenced in the mark.</p><p>By default the x-axis labels were displayed at 45 degrees to the horizontal. I changed this angle to 0 degrees to aid readability as I'm not a fan of having to tilt my head to read these!</p><h3>Challenges</h3><p>Since the dataset began in 1977, a transform filter was used to ensure the x-axis began with the year 2000 to mimic the original.</p><p>A title was added as well as a subtitle. The value of these were strings.</p><p>The formatting of the y-axis needed to reflect the fact that it was a currency and, in addition, was quoted in billions. This was achieved using a label expression in the axisY property in the config. This expression said if the label value is zero, return that value, otherwise append '$' to the formatted value.</p><p>The last thing was the arrows which are made using point marks and certain styles I defined in the config. We created two styles (_arrowdown and _arrowleft) and then in the specification, layered two point marks with the bar mark. The point marks would then reference each of the styles created.</p><h2>Compromises</h2><p>There were a couple of things outside the scope of Deneb. It is only possible to have one title and one subtitle per visual so I was unable to create the three lines of titling as per the original. Or rather I was unable to format three lines in three different ways. Hence the headline is actually a Power BI card.</p><p>The narrative on the right hand side was also not possible in Deneb. It is not possible to format a substring in a different way to the rest of the string. This is also not possible in native Power BI. To achieve this with the red and green text colouring I used another custom visual called HTML Content which allows you to write in HTML with inline CSS styling and positioned this above the Deneb visual.</p><h2>Outcome</h2><figure><img src='/images/USDomesticBoxOffice_Remake.png' alt='Vega-Lite Remake' style='max-width:100%; height:auto;'><figcaption>My Deneb Remake</figcaption></figure><h2>Code</h2><p>You can view the full Vega-Lite config and specification below:</p><a href='https://gist.github.com/SurnmHanes/805f2c93c6c60c7e3351db609e4f55e6'>US Domestic Box Office Collection - Vega-Lite Config</a><br><br><a href='https://gist.github.com/SurnmHanes/2deea32f5e7c794b0981df689826ba4f'>US Domestic Box Office Collection - Vega-Lite Specification</a>"
  },
  {
    "title": "Deneb Remakes",
    "date": "2025-04-15",
        "content": "<p>Deneb is a custom visual in Power BI which allows you to use Vega-Lite grammar to create your own visuals. Ever since I found out about Deneb in around 2021, I have been fascinated and enthralled by the power it can wield within Power BI. I have also, if I'm honest, been frustrated in almost equal measure along the learning journey!</p><p>I've always wanted to improve my ability with the Vega-Lite grammar which the Deneb visual uses. This mini-project felt like a really good way to get hands-on and develop and hone my skills and understanding.</p><p>The idea is quite simple: scour the internet for interesting visuals and see if I can re-create them inside Power BI using the Deneb custom visual.</p>"
  },
  {
    "title": "Game of Thrones Episode Ratings - Deneb Remake #2",
    "date": "2025-05-27",
    "content": "<h2>Summary</h2><p>A heatmap seen on Threads displaying the ratings for every episode of every series was recreated using Vega-Lite inside a Deneb custom visual in Power BI.</p><h2>Inspiration & Background</h2><p>I found this chart (<a href='https://www.threads.com/@infobeautiful/post/DHMu4q4sJhq/the-sudden-collapse-of-westeros-the-sudden-death-of-a-tv-show'>Game Of Thrones</a>) on the Information is Beautiful Twitter / X page showing the ratings for each episode of every season of Game Of Thrones in heat map form. Although I'm not a Game Of Thrones fan, the visual intrigued me and having little experience of building heat maps, I thought this would make an interesting task to re-create using Vega-Lite inside a Deneb custom visual in Power BI.</p><figure><img src='/images/GameOfThrones_Original.png' alt='Original Visualisation'><figcaption>Original visualisation by <a href='https://informationisbeautiful.net/' target='_blank'>Information is Beautiful</a>, shared via <a href='https://www.threads.com/@infobeautiful/post/DHMu4q4sJhq/the-sudden-collapse-of-westeros-the-sudden-death-of-a-tv-show' target='_blank'>Threads</a>.</figcaption></figure><br><p>The visual is a two-dimensional chart (episodes on y-axis, series' on x-axis) displaying a rating out of 10 for each series/episode combination. Additionally the ratings are 'bucketed' and colour-coded based on their rating category. The image also has a cover image and title on the left hand side but this doesn't form part of this remake.</p><h2>Methodology</h2><p>My first step was creating the raw data manually since I couldn't access the original source of the data. As part of the import process I then used Power Query to unpivot the data to provide 3 columns of data: Series, Episode and Rating which I could then use in the visual.</p><p>The remake required layering two charts to give the appearance of one, a very common technique in Vega-Lite inside Deneb: one to create the heat map rectangles and then another to overlay the rating labels in each rectangle.</p><h3>Design Notes</h3><p>The first thing to do was to create the heat map shapes. This was done using a rect mark. We then used a text mark to display the text for the ratings in each rectangle, the two marks being layered together in the code and sharing the x and y co-ordinate encodings.</p><p>We then used conditional formatting to colour the rectangles according to the buckets and also to colour the text black or white according to the rating.</p><h3>Challenges</h3><h4>Y Axis</h4><p>One of the first challenges I encountered was two-fold and involved the y axis. Firstly how do I prefix the axis labels to show the 'E'? And secondly, once I'd achieved that, how could I sort them into the correct order given they are no longer purely numeric labels?</p><p>The solution is fairly straightforward in Vega-Lite, once you know how! We create a transform.calculate expression to solve the first part. A transform.calculate is similar to a calculated column in Power BI: this idea of deriving a new column in the dataset using a calculation based on an existing column or columns.</p><p>So in this case, we create a new 'calculated column' called YAxisLabel which is the character 'E' prefixed on the episode number.</p><p>This YAxisLabel calculated column is then used in the y-axis encoding which brings us to our second problem. By default this will then have the incorrect sort order because, for example, Vega-Lite thinks that 'E10' and 'E11' come before 'E2'.</p><p>To resolve this issue, we can use the sort property of the y encoding. This allows us to sort by the Episode field (which is purely numeric) in an ascending order. Pretty neat!</p><h4>Colour Legend</h4><p>The next challenge came in colouring the rectangle shapes based on the episode rating. The first step here was to understand the thresholds for the various categories. For instance identifying that an episode was considered 'Awesome' if it had a rating over 9 or a 'Bad' episode garnered a rating of between 5 and 6, for example.</p><p>Once the thresholds were understood, another transform.calculate was used to create a new 'calculated column' called 'Rating Category'. In Power BI language, the Rating Category was essentially a SWITCH statement (or a series of IF statements) which returns the category depending on the rating score.</p><p>This Rating Category column was then used in the color encoding of the rect mark.</p><h4>Font Colour</h4><p>Now that we have coloured all the rectangles according to the episode rating, this meant that some of the text displaying the rating on the rectangle became hard to read. Dark colour on a dark background or conversely a light colour on a light background. To resolve this, we would need to introduce some conditional logic that says: if the rectangle colour is dark, then use white for the text, otherwise use black.</p><p>We introduced this logic in the color encoding of the text mark by using a condition / test expression where we said if the rating was less than 6 or above 9, then use white text otherwise use black text.<h2>Compromises</h2><p>There were no real compromises that needed to be made to achieve a decent reproduction of the original visual. I was very pleased with how straightforward the task turned out to be and with how close to the original the end result was.</p><h2>Outcome</h2><figure><img src='/images/GameOfThrones_Remake.png' alt='Vega-Lite Remake' style='max-width:100%; height:auto;'><figcaption>My Deneb Remake</figcaption></figure><h2>Code</h2><p>You can view the full Vega-Lite config and specification below:</p><a href='https://gist.github.com/SurnmHanes/0d02326420713f8235f7253ce9de6553'>Game Of Thrones Episode Ratings - Vega-Lite Config</a><br><br><a href='https://gist.github.com/SurnmHanes/ea57f8ff4dc43cfe7c7b18922fb17e9f'>Game Of Thrones Episode Ratings - Vega-Lite Specification</a>"
  },
  {
    "title": "Digital Nomads: Where Should You Go? - Deneb Remake #3",
    "date": "2025-06-05",
    "content": "<h2>Summary</h2><p>A scatterplot seen on trendlineHQ displaying, for a number of countries which offer a Digital Nomad visa, the Cost of Living Index vs Fixed Internet Speed was recreated using Vega-Lite inside a Deneb custom visual in Power BI.</p><h2>Inspiration & Background</h2><p>I found this chart (<a href='https://www.trendlinehq.com/p/best-countries-for-digital-nomads'>Best Countries for Digital Nomads</a>) on the TrendlineHQ website showing the Cost of Living Index vs the Fixed Internet Speed for a selection of countries which offer a Digital Nomad visa. A Digital Nomad is a term I was familiar with and essentially represents someone who can work from anywhere only requiring an internet connection. So this chart was, in my view, ranking the attractiveness of countries which offer such a visa to foreigners. High internet connection with a low cost of living being the ideal.</p><p>I have always been an avid traveller and pre-kids and pre-mortgage the idea of being a Digital Nomad and living in another culture had its appeal for me, hence the interest in this chart!</p><figure><img src='/images/DigitalNomads_Original.png' alt='Original Visualisation'><figcaption>Original visualisation by <a href='https://www.trendlinehq.com' target='_blank'>Trendline</a></figcaption></figure><br><p>The visual is a two-dimensional chart (fixed Internet speed on y-axis, Cost of Living Index value on the x-axis) with each point identifying where a specific country (which offers the Digital Nomad visa) sits in relation to the other countries. Additionally the ratings are grouped and colour-coded according to the continent that they belong to. The visual has a large heading used to attract interest and a smaller subheading detailing what the visual is displaying.</p><h2>Methodology</h2><p>The raw data for this came from two different sources. I used Power Query to merge (or join) the datasets together based on the country.</p>The main visual was again made up of two marks in vega-lite: one for the points and another overlaid for the country labels.<p></p><h3>Design Notes</h3><h4>Point mark</h4><p>We began with the point mark which defined both axes and each country's position. By default the points were hollow so we ensured they were more true to the original by, in the config, setting the filled property for all point marks to true.</p><p>We then ensured they were grouped by continent by setting the colour encoding to be determined by the Continent field. However these colours are arbitrarily chosen by Vega-Lite and we wanted to ensure they matched the original. To do this, within the colour encoding, we used the scale property. The scale property used in this way allows us to map a domain (which comes from the source data) to a range (which appears in the visual). It is a very handy way to map data categories to visual categories and maintain control over what appears in the visual. In this case our domain is the list of continents and our range is the list of colours that we want these continents to be. <p></p><h4>Text marks</h4><p>At this point, we have a visual with points representing countries grouped in colour based on their continent. However we have no labels so do not know which point represents which country. So we now layer a text mark with the text encoding to be the Country field (for a select number of points). This provides the user with the name of the country in the visual. Having a label for all countries would overwhelm the visual (and the user) and would achieve the opposite of what is desired. This mark has an x encoding of Cost of Living and a y encoding of Internet Speed (together with a small y offset) so it appears next to the point it represents. I had a hard time finding a nice elegant way to include only select countries in this mark. In the end I created a transform.calculate field which compared the current value of the Country field (datum.Country) against a list of country strings and returned true if it matched one or false otherwise. I then filtered by this field in the mark to only return a country name if this calculated field was true.</p><p>Three supplementary text marks were also used for the chart title, the subtitle and the Source details at the bottom. Since none of these marks is dependent on the data, we used a blank dataset as the data source within each of these marks.</p><h4>Tooltip</h4><p>While I was building this visual I found myself wondering which country each point represented so, in order to make this easier for the user, I added a tooltip to the visual. This was added as an encoding to the original point mark and is made up of the 3 fields: Country, Cost of Living and Internet Speed with the latter two formatted such that the Cost of Living has one decimal place and the Internet Speed as a whole. <div style='display: flex; align-items: flex-end'> <figure><img src='/images/DigitalNomad_tooltip.png' alt='Visual Tooltip' style='max-width:100%; height:auto;'><figcaption>Example Tooltip</figcaption></figure><figure><img src='/images/DigitalNomads_tooltip_back.png' alt='Visual Tooltip Code' style='max-width:100%; height:auto; '><figcaption>Tooltip Code</figcaption></figure></div></p><h3>Challenges</h3><h4>Country List</h4><p>Identifying the list of countries in the raw data and replicating all of these was difficult since the original visual only had labels for certain countries! In addition the article was from 2 years ago, and the data I used was more recent and therefore the values for both Cost of Living and in particular Internet Speed will have been different.</p><h4>Selective Labelling</h4><p>The next issue I had was the selective labelling. Could I find an elegant way to identify the countries that should have a label and those that shouldn't? I solved this problem but in rather a brute-force kind of way as the code will show. I'm sure there must be a better way to do this.<h4>X Axis</h4><p>The X Axis for the original visual started from 20 rather than from 0. I'd never encountered this before so had to do some reading of the documentation to understand how to resolve.</p><p>The solution is again using the scale property in the x encoding for the point mark. We set the domain to be [20, 100] and the range is defined as 'width'. What this is doing is saying we want the width of the x axis to cover x values from the data ranging from 20 to 100 only.</p><h2>Compromises</h2><h3>Label Positioning</h3><p>The main compromise in the report is the fact that the country labels all appear in the same position relative to the point (i.e. above the point). This compares with the original visual where, for example, the Bahamas label is below the point but Namibia is to the right of the point.</p><h2>Outcome</h2><figure><img src='/images/DigitalNomads_Remake.png' alt='Vega-Lite Remake' style='max-width:100%; height:auto;'><figcaption>My Deneb Remake</figcaption></figure><h2>Code</h2><p>You can view the full Vega-Lite config and specification below:</p><a href='https://gist.github.com/SurnmHanes/2339c0f19ed40a95a5a1af8ef5449d7a'>Digital Nomads: Where Should You Go? - Vega-Lite Config</a><br><br><a href='https://gist.github.com/SurnmHanes/14608d1e66d594d9477de823c02154de'>Digital Nomads: Where Should You Go? - Vega-Lite Specification</a>"
  }

]
